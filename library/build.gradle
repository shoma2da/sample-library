apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.0"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.0.0'
}

def siteUrl = 'https://github.com/shoma2da/sample-library'
def gitUrl = 'https://github.com/shoma2da/sample-library.git'

bintray {
    user = bintray_user
    key = bintray_api_key

    configurations = ['archives'] //When uploading configuration files
    pkg {
        repo = 'maven'
        name = 'sample-library'
        desc = 'Bintray aar publishing example'
        websiteUrl = siteUrl
        issueTrackerUrl = 'https://github.com/shoma2da/sample-library/issues'
        vcsUrl = gitUrl
        licenses = ['MIT']
        labels = ['aar', 'android', 'example']
        publicDownloadNumbers = true
    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name 'Bintray publish Gradle aar example'
                url siteUrl
                developers {
                    developer {
                        id 'shoma2da'
                        name 'Shoichi Matsuda'
                        email 'marcos.shoichi.matsuda@gmail.com'
                    }
                }
                scm {
                    connection siteUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

task findConventions << {
    println project.getConvention()
}
